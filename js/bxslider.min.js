/**
 * BxSlider v4.1.2 - Fully loaded, responsive content slider
 * http://bxslider.com
 *
 * Copyright 2014, Steven Wanderski - http://stevenwanderski.com - http://bxcreative.com
 * Written while drinking Belgian ales and listening to jazz
 *
 * Released under the MIT license - http://opensource.org/licenses/MIT
 */
!(function (t) {
    const e = {}; const s = {
        mode: "horizontal", slideSelector: "", infiniteLoop: !0, hideControlOnEnd: !1, speed: 500, easing: null, slideMargin: 0, startSlide: 0, randomStart: !1, captions: !1, ticker: !1, tickerHover: !1, adaptiveHeight: !1, adaptiveHeightSpeed: 500, video: !1, useCSS: !0, preloadImages: "visible", responsive: !0, slideZIndex: 50, touchEnabled: !0, swipeThreshold: 50, oneToOneTouch: !0, preventDefaultSwipeX: !0, preventDefaultSwipeY: !1, pager: !0, pagerType: "full", pagerShortSeparator: " / ", pagerSelector: null, buildPager: null, pagerCustom: null, controls: !0, nextText: "Next", prevText: "Prev", nextSelector: null, prevSelector: null, autoControls: !1, startText: "Start", stopText: "Stop", autoControlsCombine: !1, autoControlsSelector: null, auto: !1, pause: 4e3, autoStart: !0, autoDirection: "next", autoHover: !1, autoDelay: 0, minSlides: 1, maxSlides: 1, moveSlides: 0, slideWidth: 0, onSliderLoad() {}, onSlideBefore() {}, onSlideAfter() {}, onSlideNext() {}, onSlidePrev() {}, onSliderResize() {},
    }; t.fn.bxSlider = function (n) { if (this.length == 0) return this; if (this.length > 1) return this.each(function () { t(this).bxSlider(n); }), this; const o = {}; const r = this; e.el = this; let a = t(window).width(); let l = t(window).height(); const d = function () { o.settings = t.extend({}, s, n), o.settings.slideWidth = parseInt(o.settings.slideWidth), o.children = r.children(o.settings.slideSelector), o.children.length < o.settings.minSlides && (o.settings.minSlides = o.children.length), o.children.length < o.settings.maxSlides && (o.settings.maxSlides = o.children.length), o.settings.randomStart && (o.settings.startSlide = Math.floor(Math.random() * o.children.length)), o.active = { index: o.settings.startSlide }, o.carousel = o.settings.minSlides > 1 || o.settings.maxSlides > 1, o.carousel && (o.settings.preloadImages = "all"), o.minThreshold = o.settings.minSlides * o.settings.slideWidth + (o.settings.minSlides - 1) * o.settings.slideMargin, o.maxThreshold = o.settings.maxSlides * o.settings.slideWidth + (o.settings.maxSlides - 1) * o.settings.slideMargin, o.working = !1, o.controls = {}, o.interval = null, o.animProp = o.settings.mode == "vertical" ? "top" : "left", o.usingCSS = o.settings.useCSS && o.settings.mode != "fade" && (function () { const t = document.createElement("div"); const e = ["WebkitPerspective", "MozPerspective", "OPerspective", "msPerspective"]; for (const i in e) if (void 0 !== t.style[e[i]]) return o.cssPrefix = e[i].replace("Perspective", "").toLowerCase(), o.animProp = `-${o.cssPrefix}-transform`, !0; return !1; }()), o.settings.mode == "vertical" && (o.settings.maxSlides = o.settings.minSlides), r.data("origStyle", r.attr("style")), r.children(o.settings.slideSelector).each(function () { t(this).data("origStyle", t(this).attr("style")); }), c(); }; var c = function () { r.wrap("<div class=\"bx-wrapper\"><div class=\"bx-viewport\"></div></div>"), o.viewport = r.parent(), o.loader = t("<div class=\"bx-loading\" />"), o.viewport.prepend(o.loader), r.css({ width: o.settings.mode == "horizontal" ? `${100 * o.children.length + 215}%` : "auto", position: "relative" }), o.usingCSS && o.settings.easing ? r.css(`-${o.cssPrefix}-transition-timing-function`, o.settings.easing) : o.settings.easing || (o.settings.easing = "swing"), f(), o.viewport.css({ width: "100%", overflow: "hidden", position: "relative" }), o.viewport.parent().css({ maxWidth: p() }), o.settings.pager || o.viewport.parent().css({ margin: "0 auto 0px" }), o.children.css({ float: o.settings.mode == "horizontal" ? "left" : "none", listStyle: "none", position: "relative" }), o.children.css("width", u()), o.settings.mode == "horizontal" && o.settings.slideMargin > 0 && o.children.css("marginRight", o.settings.slideMargin), o.settings.mode == "vertical" && o.settings.slideMargin > 0 && o.children.css("marginBottom", o.settings.slideMargin), o.settings.mode == "fade" && (o.children.css({ position: "absolute", zIndex: 0, display: "none" }), o.children.eq(o.settings.startSlide).css({ zIndex: o.settings.slideZIndex, display: "block" })), o.controls.el = t("<div class=\"bx-controls\" />"), o.settings.captions && P(), o.active.last = o.settings.startSlide == x() - 1, o.settings.video && r.fitVids(); let e = o.children.eq(o.settings.startSlide); o.settings.preloadImages == "all" && (e = o.children), o.settings.ticker ? o.settings.pager = !1 : (o.settings.pager && T(), o.settings.controls && C(), o.settings.auto && o.settings.autoControls && E(), (o.settings.controls || o.settings.autoControls || o.settings.pager) && o.viewport.after(o.controls.el)), g(e, h); }; var g = function (e, i) { const s = e.find("img, iframe").length; if (s == 0) return i(), void 0; let n = 0; e.find("img, iframe").each(function () { t(this).one("load", () => { ++n == s && i(); }).each(function () { this.complete && t(this).load(); }); }); }; var h = function () { if (o.settings.infiniteLoop && o.settings.mode != "fade" && !o.settings.ticker) { const e = o.settings.mode == "vertical" ? o.settings.minSlides : o.settings.maxSlides; const i = o.children.slice(0, e).clone().addClass("bx-clone"); const s = o.children.slice(-e).clone().addClass("bx-clone"); r.append(i).prepend(s); }o.loader.remove(), S(), o.settings.mode == "vertical" && (o.settings.adaptiveHeight = !0), o.viewport.height(v()), r.redrawSlider(), o.settings.onSliderLoad(o.active.index), o.initialized = !0, o.settings.responsive && t(window).bind("resize", Z), o.settings.auto && o.settings.autoStart && H(), o.settings.ticker && L(), o.settings.pager && q(o.settings.startSlide), o.settings.controls && W(), o.settings.touchEnabled && !o.settings.ticker && O(); }; var v = function () { let e = 0; let s = t(); if (o.settings.mode == "vertical" || o.settings.adaptiveHeight) if (o.carousel) { const n = o.settings.moveSlides == 1 ? o.active.index : o.active.index * m(); for (s = o.children.eq(n), i = 1; i <= o.settings.maxSlides - 1; i++)s = n + i >= o.children.length ? s.add(o.children.eq(i - 1)) : s.add(o.children.eq(n + i)); } else s = o.children.eq(o.active.index); else s = o.children; return o.settings.mode == "vertical" ? (s.each(function () { e += t(this).outerHeight(); }), o.settings.slideMargin > 0 && (e += o.settings.slideMargin * (o.settings.minSlides - 1))) : e = Math.max.apply(Math, s.map(function () { return t(this).outerHeight(!1); }).get()), e; }; var p = function () { let t = "100%"; return o.settings.slideWidth > 0 && (t = o.settings.mode == "horizontal" ? o.settings.maxSlides * o.settings.slideWidth + (o.settings.maxSlides - 1) * o.settings.slideMargin : o.settings.slideWidth), t; }; var u = function () { let t = o.settings.slideWidth; const e = o.viewport.width(); return o.settings.slideWidth == 0 || o.settings.slideWidth > e && !o.carousel || o.settings.mode == "vertical" ? t = e : o.settings.maxSlides > 1 && o.settings.mode == "horizontal" && (e > o.maxThreshold || e < o.minThreshold && (t = (e - o.settings.slideMargin * (o.settings.minSlides - 1)) / o.settings.minSlides)), t; }; var f = function () { let t = 1; if (o.settings.mode == "horizontal" && o.settings.slideWidth > 0) if (o.viewport.width() < o.minThreshold)t = o.settings.minSlides; else if (o.viewport.width() > o.maxThreshold)t = o.settings.maxSlides; else { const e = o.children.first().width(); t = Math.floor(o.viewport.width() / e); } else o.settings.mode == "vertical" && (t = o.settings.minSlides); return t; }; var x = function () { let t = 0; if (o.settings.moveSlides > 0) if (o.settings.infiniteLoop)t = o.children.length / m(); else for (let e = 0, i = 0; e < o.children.length;)++t, e = i + f(), i += o.settings.moveSlides <= f() ? o.settings.moveSlides : f(); else t = Math.ceil(o.children.length / f()); return t; }; var m = function () { return o.settings.moveSlides > 0 && o.settings.moveSlides <= f() ? o.settings.moveSlides : f(); }; var S = function () { if (o.children.length > o.settings.maxSlides && o.active.last && !o.settings.infiniteLoop) { if (o.settings.mode == "horizontal") { const t = o.children.last(); var e = t.position(); b(-(e.left - (o.viewport.width() - t.width())), "reset", 0); } else if (o.settings.mode == "vertical") { const i = o.children.length - o.settings.minSlides; var e = o.children.eq(i).position(); b(-e.top, "reset", 0); } } else { var e = o.children.eq(o.active.index * m()).position(); o.active.index == x() - 1 && (o.active.last = !0), void 0 != e && (o.settings.mode == "horizontal" ? b(-e.left, "reset", 0) : o.settings.mode == "vertical" && b(-e.top, "reset", 0)); } }; var b = function (t, e, i, s) { if (o.usingCSS) { const n = o.settings.mode == "vertical" ? `translate3d(0, ${t}px, 0)` : `translate3d(${t}px, 0, 0)`; r.css(`-${o.cssPrefix}-transition-duration`, `${i / 1e3}s`), e == "slide" ? (r.css(o.animProp, n), r.bind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd", () => { r.unbind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd"), D(); })) : e == "reset" ? r.css(o.animProp, n) : e == "ticker" && (r.css(`-${o.cssPrefix}-transition-timing-function`, "linear"), r.css(o.animProp, n), r.bind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd", () => { r.unbind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd"), b(s.resetValue, "reset", 0), N(); })); } else { const a = {}; a[o.animProp] = t, e == "slide" ? r.animate(a, i, o.settings.easing, () => { D(); }) : e == "reset" ? r.css(o.animProp, t) : e == "ticker" && r.animate(a, speed, "linear", () => { b(s.resetValue, "reset", 0), N(); }); } }; const w = function () { for (var e = "", i = x(), s = 0; i > s; s++) { let n = ""; o.settings.buildPager && t.isFunction(o.settings.buildPager) ? (n = o.settings.buildPager(s), o.pagerEl.addClass("bx-custom-pager")) : (n = s + 1, o.pagerEl.addClass("bx-default-pager")), e += `<div class="bx-pager-item"><a href="" data-slide-index="${s}" class="bx-pager-link">${n}</a></div>`; }o.pagerEl.html(e); }; var T = function () { o.settings.pagerCustom ? o.pagerEl = t(o.settings.pagerCustom) : (o.pagerEl = t("<div class=\"bx-pager\" />"), o.settings.pagerSelector ? t(o.settings.pagerSelector).html(o.pagerEl) : o.controls.el.addClass("bx-has-pager").append(o.pagerEl), w()), o.pagerEl.on("click", "a", I); }; var C = function () { o.controls.next = t(`<a class="bx-next" href="">${o.settings.nextText}</a>`), o.controls.prev = t(`<a class="bx-prev" href="">${o.settings.prevText}</a>`), o.controls.next.bind("click", y), o.controls.prev.bind("click", z), o.settings.nextSelector && t(o.settings.nextSelector).append(o.controls.next), o.settings.prevSelector && t(o.settings.prevSelector).append(o.controls.prev), o.settings.nextSelector || o.settings.prevSelector || (o.controls.directionEl = t("<div class=\"bx-controls-direction\" />"), o.controls.directionEl.append(o.controls.prev).append(o.controls.next), o.controls.el.addClass("bx-has-controls-direction").append(o.controls.directionEl)); }; var E = function () { o.controls.start = t(`<div class="bx-controls-auto-item"><a class="bx-start" href="">${o.settings.startText}</a></div>`), o.controls.stop = t(`<div class="bx-controls-auto-item"><a class="bx-stop" href="">${o.settings.stopText}</a></div>`), o.controls.autoEl = t("<div class=\"bx-controls-auto\" />"), o.controls.autoEl.on("click", ".bx-start", k), o.controls.autoEl.on("click", ".bx-stop", M), o.settings.autoControlsCombine ? o.controls.autoEl.append(o.controls.start) : o.controls.autoEl.append(o.controls.start).append(o.controls.stop), o.settings.autoControlsSelector ? t(o.settings.autoControlsSelector).html(o.controls.autoEl) : o.controls.el.addClass("bx-has-controls-auto").append(o.controls.autoEl), A(o.settings.autoStart ? "stop" : "start"); }; var P = function () { o.children.each(function () { const e = t(this).find("img:first").attr("title"); void 0 != e && (`${e}`).length && t(this).append(`<div class="bx-caption"><span>${e}</span></div>`); }); }; var y = function (t) { o.settings.auto && r.stopAuto(), r.goToNextSlide(), t.preventDefault(); }; var z = function (t) { o.settings.auto && r.stopAuto(), r.goToPrevSlide(), t.preventDefault(); }; var k = function (t) { r.startAuto(), t.preventDefault(); }; var M = function (t) { r.stopAuto(), t.preventDefault(); }; var I = function (e) { o.settings.auto && r.stopAuto(); const i = t(e.currentTarget); const s = parseInt(i.attr("data-slide-index")); s != o.active.index && r.goToSlide(s), e.preventDefault(); }; var q = function (e) { let i = o.children.length; return o.settings.pagerType == "short" ? (o.settings.maxSlides > 1 && (i = Math.ceil(o.children.length / o.settings.maxSlides)), o.pagerEl.html(e + 1 + o.settings.pagerShortSeparator + i), void 0) : (o.pagerEl.find("a").removeClass("active"), o.pagerEl.each((i, s) => { t(s).find("a").eq(e).addClass("active"); }), void 0); }; var D = function () { if (o.settings.infiniteLoop) { let t = ""; o.active.index == 0 ? t = o.children.eq(0).position() : o.active.index == x() - 1 && o.carousel ? t = o.children.eq((x() - 1) * m()).position() : o.active.index == o.children.length - 1 && (t = o.children.eq(o.children.length - 1).position()), t && (o.settings.mode == "horizontal" ? b(-t.left, "reset", 0) : o.settings.mode == "vertical" && b(-t.top, "reset", 0)); }o.working = !1, o.settings.onSlideAfter(o.children.eq(o.active.index), o.oldIndex, o.active.index); }; var A = function (t) { o.settings.autoControlsCombine ? o.controls.autoEl.html(o.controls[t]) : (o.controls.autoEl.find("a").removeClass("active"), o.controls.autoEl.find(`a:not(.bx-${t})`).addClass("active")); }; var W = function () { x() == 1 ? (o.controls.prev.addClass("disabled"), o.controls.next.addClass("disabled")) : !o.settings.infiniteLoop && o.settings.hideControlOnEnd && (o.active.index == 0 ? (o.controls.prev.addClass("disabled"), o.controls.next.removeClass("disabled")) : o.active.index == x() - 1 ? (o.controls.next.addClass("disabled"), o.controls.prev.removeClass("disabled")) : (o.controls.prev.removeClass("disabled"), o.controls.next.removeClass("disabled"))); }; var H = function () { o.settings.autoDelay > 0 ? setTimeout(r.startAuto, o.settings.autoDelay) : r.startAuto(), o.settings.autoHover && r.hover(() => { o.interval && (r.stopAuto(!0), o.autoPaused = !0); }, () => { o.autoPaused && (r.startAuto(!0), o.autoPaused = null); }); }; var L = function () { let e = 0; if (o.settings.autoDirection == "next")r.append(o.children.clone().addClass("bx-clone")); else { r.prepend(o.children.clone().addClass("bx-clone")); const i = o.children.first().position(); e = o.settings.mode == "horizontal" ? -i.left : -i.top; }b(e, "reset", 0), o.settings.pager = !1, o.settings.controls = !1, o.settings.autoControls = !1, o.settings.tickerHover && !o.usingCSS && o.viewport.hover(() => { r.stop(); }, () => { let e = 0; o.children.each(function () { e += o.settings.mode == "horizontal" ? t(this).outerWidth(!0) : t(this).outerHeight(!0); }); const i = o.settings.speed / e; const s = o.settings.mode == "horizontal" ? "left" : "top"; const n = i * (e - Math.abs(parseInt(r.css(s)))); N(n); }), N(); }; var N = function (t) { speed = t || o.settings.speed; let e = { left: 0, top: 0 }; let i = { left: 0, top: 0 }; o.settings.autoDirection == "next" ? e = r.find(".bx-clone").first().position() : i = o.children.first().position(); const s = o.settings.mode == "horizontal" ? -e.left : -e.top; const n = o.settings.mode == "horizontal" ? -i.left : -i.top; const a = { resetValue: n }; b(s, "ticker", speed, a); }; var O = function () { o.touch = { start: { x: 0, y: 0 }, end: { x: 0, y: 0 } }, o.viewport.bind("touchstart", X); }; var X = function (t) { if (o.working)t.preventDefault(); else { o.touch.originalPos = r.position(); const e = t.originalEvent; o.touch.start.x = e.changedTouches[0].pageX, o.touch.start.y = e.changedTouches[0].pageY, o.viewport.bind("touchmove", Y), o.viewport.bind("touchend", V); } }; var Y = function (t) { const e = t.originalEvent; const i = Math.abs(e.changedTouches[0].pageX - o.touch.start.x); const s = Math.abs(e.changedTouches[0].pageY - o.touch.start.y); if (3 * i > s && o.settings.preventDefaultSwipeX ? t.preventDefault() : 3 * s > i && o.settings.preventDefaultSwipeY && t.preventDefault(), o.settings.mode != "fade" && o.settings.oneToOneTouch) { let n = 0; if (o.settings.mode == "horizontal") { var r = e.changedTouches[0].pageX - o.touch.start.x; n = o.touch.originalPos.left + r; } else { var r = e.changedTouches[0].pageY - o.touch.start.y; n = o.touch.originalPos.top + r; }b(n, "reset", 0); } }; var V = function (t) { o.viewport.unbind("touchmove", Y); const e = t.originalEvent; let i = 0; if (o.touch.end.x = e.changedTouches[0].pageX, o.touch.end.y = e.changedTouches[0].pageY, o.settings.mode == "fade") { var s = Math.abs(o.touch.start.x - o.touch.end.x); s >= o.settings.swipeThreshold && (o.touch.start.x > o.touch.end.x ? r.goToNextSlide() : r.goToPrevSlide(), r.stopAuto()); } else { var s = 0; o.settings.mode == "horizontal" ? (s = o.touch.end.x - o.touch.start.x, i = o.touch.originalPos.left) : (s = o.touch.end.y - o.touch.start.y, i = o.touch.originalPos.top), !o.settings.infiniteLoop && (o.active.index == 0 && s > 0 || o.active.last && s < 0) ? b(i, "reset", 200) : Math.abs(s) >= o.settings.swipeThreshold ? (s < 0 ? r.goToNextSlide() : r.goToPrevSlide(), r.stopAuto()) : b(i, "reset", 200); }o.viewport.unbind("touchend", V); }; var Z = function () { const e = t(window).width(); const i = t(window).height(); (a != e || l != i) && (a = e, l = i, r.redrawSlider(), o.settings.onSliderResize.call(r, o.active.index)); }; return r.goToSlide = function (e, i) { if (!o.working && o.active.index != e) if (o.working = !0, o.oldIndex = o.active.index, o.active.index = e < 0 ? x() - 1 : e >= x() ? 0 : e, o.settings.onSlideBefore(o.children.eq(o.active.index), o.oldIndex, o.active.index), i == "next" ? o.settings.onSlideNext(o.children.eq(o.active.index), o.oldIndex, o.active.index) : i == "prev" && o.settings.onSlidePrev(o.children.eq(o.active.index), o.oldIndex, o.active.index), o.active.last = o.active.index >= x() - 1, o.settings.pager && q(o.active.index), o.settings.controls && W(), o.settings.mode == "fade")o.settings.adaptiveHeight && o.viewport.height() != v() && o.viewport.animate({ height: v() }, o.settings.adaptiveHeightSpeed), o.children.filter(":visible").fadeOut(o.settings.speed).css({ zIndex: 0 }), o.children.eq(o.active.index).css("zIndex", o.settings.slideZIndex + 1).fadeIn(o.settings.speed, function () { t(this).css("zIndex", o.settings.slideZIndex), D(); }); else { o.settings.adaptiveHeight && o.viewport.height() != v() && o.viewport.animate({ height: v() }, o.settings.adaptiveHeightSpeed); let s = 0; let n = { left: 0, top: 0 }; if (!o.settings.infiniteLoop && o.carousel && o.active.last) if (o.settings.mode == "horizontal") { var a = o.children.eq(o.children.length - 1); n = a.position(), s = o.viewport.width() - a.outerWidth(); } else { const l = o.children.length - o.settings.minSlides; n = o.children.eq(l).position(); } else if (o.carousel && o.active.last && i == "prev") { const d = o.settings.moveSlides == 1 ? o.settings.maxSlides - m() : (x() - 1) * m() - (o.children.length - o.settings.maxSlides); var a = r.children(".bx-clone").eq(d); n = a.position(); } else if (i == "next" && o.active.index == 0)n = r.find("> .bx-clone").eq(o.settings.maxSlides).position(), o.active.last = !1; else if (e >= 0) { const c = e * m(); n = o.children.eq(c).position(); } if (typeof n !== "undefined") { const g = o.settings.mode == "horizontal" ? -(n.left - s) : -n.top; b(g, "slide", o.settings.speed); } } }, r.goToNextSlide = function () { if (o.settings.infiniteLoop || !o.active.last) { const t = parseInt(o.active.index) + 1; r.goToSlide(t, "next"); } }, r.goToPrevSlide = function () { if (o.settings.infiniteLoop || o.active.index != 0) { const t = parseInt(o.active.index) - 1; r.goToSlide(t, "prev"); } }, r.startAuto = function (t) { o.interval || (o.interval = setInterval(() => { o.settings.autoDirection == "next" ? r.goToNextSlide() : r.goToPrevSlide(); }, o.settings.pause), o.settings.autoControls && t != 1 && A("stop")); }, r.stopAuto = function (t) { o.interval && (clearInterval(o.interval), o.interval = null, o.settings.autoControls && t != 1 && A("start")); }, r.getCurrentSlide = function () { return o.active.index; }, r.getCurrentSlideElement = function () { return o.children.eq(o.active.index); }, r.getSlideCount = function () { return o.children.length; }, r.redrawSlider = function () { o.children.add(r.find(".bx-clone")).outerWidth(u()), o.viewport.css("height", v()), o.settings.ticker || S(), o.active.last && (o.active.index = x() - 1), o.active.index >= x() && (o.active.last = !0), o.settings.pager && !o.settings.pagerCustom && (w(), q(o.active.index)); }, r.destroySlider = function () { o.initialized && (o.initialized = !1, t(".bx-clone", this).remove(), o.children.each(function () { void 0 != t(this).data("origStyle") ? t(this).attr("style", t(this).data("origStyle")) : t(this).removeAttr("style"); }), void 0 != t(this).data("origStyle") ? this.attr("style", t(this).data("origStyle")) : t(this).removeAttr("style"), t(this).unwrap().unwrap(), o.controls.el && o.controls.el.remove(), o.controls.next && o.controls.next.remove(), o.controls.prev && o.controls.prev.remove(), o.pagerEl && o.settings.controls && o.pagerEl.remove(), t(".bx-caption", this).remove(), o.controls.autoEl && o.controls.autoEl.remove(), clearInterval(o.interval), o.settings.responsive && t(window).unbind("resize", Z)); }, r.reloadSlider = function (t) { void 0 != t && (n = t), r.destroySlider(), d(); }, d(), this; };
}(jQuery));